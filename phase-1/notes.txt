sudo journalctl -u kubelet | grep "ContainerCheckpoint"

sudo systemctl daemon-reload
sudo systemctl restart kubelet
sudo systemctl status kubelet

k get pods -n redis -o wide   
kubectl delete deployment redis -n redis

k run redis-pod --image=redis

CRIO flags
minikube ssh cat /etc/crio/crio.conf

Feature gate flags
minikube ssh -- sudo cat /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
--------------------------------------------------------------------------------------------------------------------------------

curl -X  POST "http://localhost:10250/checkpoint/default/redis-p/redis-c" \
     --insecure \
     --cert /Users/shreyasimac/.minikube/profiles/minikube/client.crt \
     --key  /Users/shreyasimac/.minikube/profiles/minikube/client.key 



curl -X POST "https://localhost:10250/checkpoint/default/redis/redis"
curl -X POST "https://nodeIP:10250/checkpoint/default/redis/redis --insecure --cert /var/run/kubernetes/client-admin.crt --key /var/run/kubernetes/client-admin.key"'


curl -X  POST "http://localhost:10250/checkpoint/redis/redis-master-0/redis" \
     --insecure \
     --cert ~/.minikube/profiles/minikube/client.crt \
     --key  ~/.minikube/profiles/minikube/client.key 

/Users/shreyasimac/.minikube/profiles/minikube

curl -X POST --cert ~/.minikube/profiles/minikube/client.crt --key ~/.minikube/profiles/minikube/client.key --insecure https://127.0.0.1:10250/checkpoint/default/nginx-deployment-69747bc944-rkhwp/nginx
     

curl -v -X POST "https://localhost:10250/checkpoint/redis/redis-replicas-0/redis"      --insecure      --cert /var/lib/kubelet/pki/kubelet-client-current.pem

helm install redis bitnami/redis --namespace redis  --create-namespace --set image.repository=spdocker81/my-redis-with-criu --set image.tag=latest --set architecture=replication


kubectl run redis-pod --image=redis:latest --namespace=redis --port=6379

helm install redis bitnami/redis \                                                                                        
  --namespace redis --create-namespace \
  --set architecture=replication

export REDIS_PASSWORD=$(kubectl get secret --namespace redis redis -o jsonpath="{.data.redis-password}" | base64 --decode)

kubectl port-forward --namespace redis svc/redis-master 6379:6379

kubectl get pods -n redis -o wide

kubectl describe node minikube

kubectl create namespace redis

minikube start --driver=docker --container-runtime=cri-o --cpus=4 --memory=4096 --extra-config=kubelet.feature-gates.ContainerCheckpoint=true
minikube start --container-runtime=cri-o  --extra-config=kubelet.feature-gates=ContainerCheckpoint=true
minikube start --driver=docker --container-runtime=containerd --cpus=4 --memory=4096 --extra-config=kubelet.feature-gates.ContainerCheckpoint=true
minikube start  --feature-gates=ContainerCheckpoint=true  --container-runtime=containerd --driver=podman --authentication.anonymous.enabled=false

mk start --extra-config=kubelet.feature-gates=ContainerCheckpoint=true driver=docker --container-runtime=cri-o \
  --enable-criu-support=true


‚ùå  Exiting due to MK_USAGE: Valid components are: [apiserver controller-manager scheduler etcd kubeadm kubelet kube-proxy]

minikube start --driver=docker --extra-config=kubelet.feature-gates ContainerCheckpoint=true

minikube start --driver=docker --network=host --container-runtime=cri-o --extra-config=kubelet.feature-gates=ContainerCheckpoint=true 

minikube start --driver=docker --container-runtime=cri-o \
  --extra-config=kubelet.feature-gates=ContainerCheckpoint=true \
  --cpus=4 --memory=4096 \
  --extra-config=kubelet.authentication.anonymous.enabled=true

Sep 21 21:16:46 minikube kubelet[1021]: E0921 21:16:46.374591    1021 run.go:72] "command failed" err="failed to load kubelet config file, path: /var/lib/kubelet/config.yaml, error: failed to load Kubelet config file /var/lib/kubelet/config.yaml, error failed to read kubelet config file \"/var/lib/kubelet/config.yaml\", error: open /var/lib/kubelet/config.yaml: no such file or directory"


kubectl get pod <pod-name> -n <namespace> -o jsonpath='{.spec.containers[*].name}'
// This will return the name of the container(s) running inside the pod

------------------------------------------------------------------------------------------------------------------------------------------------
redis % echo $REDIS_PASSWORD



tK1uQOmvcK


My node called "minikube"
Capacity:
  cpu:                2

  Thread(s) per core: 1 // hyper-threading NOT enabled
  Core(s) per socket: 1 // phy. cores

cat ~/.zsh_history


Sep 21 18:14:43 minikube kubelet[1993]: E0921 18:14:43.562586    1993 kubelet.go:1915] "Failed creating a mirror pod for" err="pods \"kube-apiserver-minikube\" already exists" pod="kube-system/kube-apiserver-minikube"


systemctl enable kubelet.service



journalctl -u kubelet


history > all_history.txt


------------------------------------------------------------------------------------------------------------------------------------------------

firewall cmds 

~ % sudo /usr/libexec/ApplicationFirewall/socketfilterfw --getglobalstate
Password:
Firewall is enabled. (State = 1) 
~ % sudo /usr/libexec/ApplicationFirewall/socketfilterfw --setglobalstate off

/var/lib/minikube/binaries/v1.31.1/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --config=/var/lib/kubelet/config.yaml --feature-gates=ContainerCheckpoint=true --hostname-override=minikube --kubeconfig=/etc/kubernetes/kubelet.conf --node-ip=192.168.49.2
